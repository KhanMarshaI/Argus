@page "/login"
@using ArgusFrontend.Services
@using ArgusFrontend.Models
@using System.Security.Claims
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Authentication;
@inject NavigationManager Navigation


<h3>Login</h3>
<EditForm Model ="loginModel" OnValidSubmit="OnSubmit" formName="LoginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Username:</label>
        <InputText @bind-Value="loginModel.Username" />
    </div>

    <div>
        <label>Password:</label>
        <InputText @bind-Value="loginModel.Password" type="password" />
    </div>

    <button type="submit">Login</button>
</EditForm>

@if (errorMessage != null)
{
    <p>@errorMessage</p>
}

@code {
    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }

    [SupplyParameterFromForm]
    private LoginModel loginModel { get; set; } = new();

    private string? errorMessage;
    private DatabaseService dbService = new DatabaseService();

    private async Task OnSubmit()
    {
        bool loginStatus = await dbService.AuthorizeUserAsync(loginModel.Username, loginModel.Password);

        if(!loginStatus)
        {
            errorMessage = "Invalid credentials";
            return;
        }

        var claims = new List<Claim>
        {
            new Claim(ClaimTypes.Name, loginModel.Username)
            //we can also add a Role here to differentiate between users and admins
        };
        var identity = new ClaimsIdentity(claims, "CustomAuth");
        var principal = new ClaimsPrincipal(identity);

        await HttpContext.SignInAsync(principal);

        Navigation.NavigateTo("/");
    }

}