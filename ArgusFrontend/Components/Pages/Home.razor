@page "/"
@using ArgusFrontend.Services
@inject Dash_DB_SRVC DashDbService

<PageTitle>Home</PageTitle>

@page "/"
@using ArgusFrontend.Services
@inject Dash_DB_SRVC DashDbService

<PageTitle>Home</PageTitle>

@page "/"
@using ArgusFrontend.Services
@inject Dash_DB_SRVC DashDbService

<PageTitle>Home</PageTitle>

<Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
    <Authorized>
        <div class="container">
            <!-- Header -->
            <header class="d-flex justify-content-between align-items-center py-3">
                <h1 class="text-success">Argus</h1>
            </header>

            <!-- Stats Section -->
            <div class="row mt-4">
                <!-- URL Analysis Stats -->
                <div class="col-md-6">
                    <div class="card text-white bg-success mb-3">
                        <div class="card-body">
                            <h4 class="card-title">Total URLs Analyzed: <span>@TotalUrls</span></h4>
                            <p class="card-text">
                                <ul>
                                    <li>Queued: <span>@QueuedUrls</span></li>
                                    <li>Completed: <span>@CompletedUrls</span></li>
                                </ul>
                            </p>
                        </div>
                    </div>
                </div>

                <!-- File Analysis Stats -->
                <div class="col-md-6">
                    <div class="card text-white bg-warning mb-3">
                        <div class="card-body">
                            <h4 class="card-title">Total Files Analyzed: <span>@TotalFiles</span></h4>
                            <p class="card-text">
                                <ul>
                                    <li>Malicious Files: <span>@MaliciousFiles</span></li>
                                    <li>Reputation: <span>@ReputableFiles</span></li>
                                </ul>
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Recent Activity Section -->
            <div class="row mt-4">
                <!-- Recent URLs -->
                <div class="col-md-6">
                    <div class="card text-white bg-dark mb-3">
                        <div class="card-body">
                            <h4 class="card-title">Recent URLs Analyzed</h4>
                            <ul>
                                @if (RecentUrls.Count == 0)
                                {
                                    <li>No recent URLs</li>
                                }
                                else
                                {
                                    @foreach (var url in RecentUrls)
                                    {
                                        <li>@url.URL - @url.Status (Analyzed at: @url.CreatedAt.ToString("yyyy-MM-dd HH:mm"))</li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                </div>

                <!-- Recent Files -->
                <div class="col-md-6">
                    <div class="card text-white bg-dark mb-3">
                        <div class="card-body">
                            <h4 class="card-title">Recent Files Analyzed</h4>
                            <ul>
                                @if (RecentFiles.Count == 0)
                                {
                                    <li>No recent files</li>
                                }
                                else
                                {
                                    @foreach (var file in RecentFiles)
                                    {
                                        <li>@file.FileHashSHA - @file.FileType (Analyzed at: @file.CreatedAt.ToString("yyyy-MM-dd HH:mm"))</li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="container text-center mt-5">
            <div class="card shadow-sm mx-auto" style="max-width: 400px; border-radius: 10px;">
                <div class="card-body">
                    <h1 class="display-4 text-danger"><i class="bi bi-shield-lock"></i></h1>
                    <h2 class="card-title text-dark">Access Denied</h2>
                    <p class="card-text text-muted">
                        You aren't logged in. Please log in to access this page.
                    </p>
                    <a href="/login" class="btn btn-primary btn-lg mt-3">
                        <i class="bi bi-box-arrow-in-right"></i> Login Now
                    </a>
                </div>
            </div>
        </div>
    </NotAuthorized>
</Microsoft.AspNetCore.Components.Authorization.AuthorizeView>


<style>
    .app-title {
        font-size: 2rem;
        font-weight: 600;
        color: #4CAF50;
    }

    .stats-card {
        border-radius: 15px;
        color: white;
    }

    .bg-muted-green {
        background-color: #2d6a4f;
    }

    .bg-muted-orange {
        background-color: #ffba08;
    }

    .recent-card {
        border-radius: 15px;
        background-color: #1b1b2f;
        color: white;
    }

    .card-header {
        font-weight: bold;
        font-size: 1.2rem;
        color: #ffffff;
        background-color: #4CAF50;
        border-bottom: none;
    }

    .btn {
        border-radius: 20px;
    }

    ul {
        padding-left: 20px;
    }

        ul li {
            margin-bottom: 8px;
        }
</style>


@code {

    // Stats
    private int TotalUrls;
    private int QueuedUrls;
    private int CompletedUrls;
    private int TotalFiles;
    private int MaliciousFiles;
    private int ReputableFiles;

    // Recent Activity
    private List<(string URL, string Status, DateTime CreatedAt)> RecentUrls = new();
    private List<(string FileHashSHA, string FileType, DateTime CreatedAt)> RecentFiles = new();

    protected override async Task OnInitializedAsync()
    {
        // Fetch stats
        var (totalUrls, totalFiles, maliciousUrls, maliciousFiles) = await DashDbService.GetDashboardStatsAsync();
        TotalUrls = totalUrls;
        TotalFiles = totalFiles;
        QueuedUrls = totalUrls - maliciousUrls; // Assuming queued = total - malicious
        CompletedUrls = maliciousUrls;
        MaliciousFiles = maliciousFiles;
        ReputableFiles = totalFiles - maliciousFiles; // Assuming reputable = total - malicious

        // Fetch recent activity
        RecentUrls = await DashDbService.GetRecentURLActivityAsync();
        RecentFiles = await DashDbService.GetRecentFileActivityAsync();
    }
}