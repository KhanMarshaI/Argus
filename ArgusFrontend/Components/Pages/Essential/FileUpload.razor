@page "/fileupload"
@using System.Text.Json
@using System.Text.Json.Serialization
@using FileAnalysis
@using URLAnalysis
@using ArgusFrontend.Services
@rendermode InteractiveServer
@inject VirusTotalService VirusTotalService

<AuthorizeView>
    <Authorized>
        <div class="container mt-5">
            <div class="card shadow">
                <div class="card-header text-white bg-dark">
                    <h3 class="card-title mb-0 display-5">File Scanner</h3>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="fileUpload" class="form-label">Select File</label>
                        <InputFile id="fileUpload" class="form-control" OnChange="OnFileSelected"></InputFile>
                    </div>
                    <button class="btn btn-success w-100"
                            @onclick="UploadFile"
                            disabled="@(!IsFileSelected)">
                        Upload
                    </button>
                    <p class="mt-3 text-center text-muted">@Message</p>
                </div>
            </div>

            @if (!string.IsNullOrWhiteSpace(ApiResponse))
            {
                <div class="card mt-4 shadow">
                    <div class="card-header text-white bg-secondary">
                        <h4 class="card-title mb-0">Upload Response</h4>
                    </div>
                    <div class="card-body">
                        <pre class="bg-light p-3 rounded">@ApiResponse</pre>
                    </div>
                </div>
            }
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private IBrowserFile? SelectedFile;
    private bool IsFileSelected => SelectedFile != null;
    private string? Message;
    private URLRep? report;
    private string? ApiResponse;

    private void OnFileSelected(InputFileChangeEventArgs e)
    {
        SelectedFile = e.File;
        Message = SelectedFile != null ? $"File selected: {SelectedFile.Name}" : "No file selected.";
    }

    private async Task UploadFile()
    {
        if (SelectedFile == null)
        {
            Message = "Please select a file.";
            return;
        }

        try
        {
            await using var stream = SelectedFile.OpenReadStream(32*1024*1024);
            report = await VirusTotalService.UploadFileAsync(stream, SelectedFile.Name);
            ApiResponse = JsonSerializer.Serialize(report, new JsonSerializerOptions { WriteIndented = true });
            Message = "File uploaded successfully.";
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Message = $"Error uploading file: {ex.Message}";
        }
    }
}
